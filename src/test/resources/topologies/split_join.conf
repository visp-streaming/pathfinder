 $source = Source() {
  concreteLocation = 192.168.0.1/openstackpool,
  type             = source,
  outputFormat     = "temperature data from sensor XYZ",
  #meaningless for sources and should be ignored by parser:
  expectedDuration = 15.2
 }

 $step1 = Operator($source) {
  allowedLocations = 192.168.0.1/openstackpool,
  concreteLocation = 192.168.0.1/openstackpool,
  inputFormat      = step1,
  type             = step1,
  outputFormat     = step2,
  size             = small,
  stateful = false
 }

 $split = Split($step1) {
   pathOrder = $step2a $step2b
 }

 $step2a = Operator($split) {
  allowedLocations = 192.168.0.1/openstackpool,
  inputFormat      = step1,
  type             = "step2a",
  outputFormat     = "step3",
  size             = small,
  stateful         = false,
 }

$step3 = Operator($step2a) {
    allowedLocations = 192.168.0.1/openstackpool,
    concreteLocation = 192.168.0.1/openstackpool,
    inputFormat      = step2a,
    type             = step3,
    outputFormat     = step4,
    size             = small,
    stateful = false
}

$step2b = Operator($split) {
    allowedLocations = 192.168.0.1/openstackpool,
    concreteLocation = 192.168.0.1/openstackpool,
    inputFormat      = step1,
    type             = step2b,
    outputFormat     = step4,
    # pathOrder is ignored on non-split nodes
    pathOrder = $step1,
    size             = small,
    stateful = false
}

$join = Join($step3, $step2b) {}

$step4 = Operator($join) {
    allowedLocations = 192.168.0.1/openstackpool,
    concreteLocation = 192.168.0.1/openstackpool,
    inputFormat      = step4,
    type             = step4,
    outputFormat     = log,
    size             = small,
    stateful = false
}

 $log = Sink($step4) {
  concreteLocation = 192.168.0.1/openstackpool,
  inputFormat      = "step4",
  type             = "log",
 }
